ruby-2-3-and-postgres-9-5-env: &ruby_2_3_and_postgres_9_5_env
  working_directory: ~/pan_domain/
  shell: /bin/bash --login
  docker:
    - image: ruby:2.3-slim
    - image: postgres:9.5-alpine

ruby-2-3-and-postgres-9-5-14-env: &ruby_2_3_and_postgres_9_5_14_env
  working_directory: ~/pan_domain/
  shell: /bin/bash --login
  docker:
    - image: ruby:2.3-slim
    - image: postgres:9.5.14-alpine

ruby-2-3-and-postgres-9-6-env: &ruby_2_3_and_postgres_9_6_env
  working_directory: ~/pan_domain/
  docker:
    - image: ruby:2.3-alpine
    - image: postgres:9.6-alpine

postgres-9-6-10: &postgres_ver_9_6_10
  docker:
    - image: postgres:9.6.10-alpine

postgres-10: &postgres_ver_10
  docker:
    - image: postgres:10-alpine

postgres-10-1: &postgres_ver_10_1
  docker:
    - image: postgres:10.1-alpine

postgres-10-2: &postgres_ver_10_2
  docker:
    - image: postgres:10.2-alpine

postgres-10-3: &postgres_ver_10_3
  docker:
    - image: postgres:10.3-alpine

postgres-10-4: &postgres_ver_10_4
  docker:
    - image: postgres:10.4-alpine

postgres-10-5: &postgres_ver_10_5
  docker:
    - image: postgres:10.5-alpine

postgres-11-0: &postgres_ver_10_0
  docker:
    - image: postgres:10.0-alpine

run-database-configuration: &run_database_configuration
  name: Configure database
  command: |
    cd spec/sample_app
    echo "test:
      adapter: postgresql
      host: 127.0.0.1
      username: postgres
      pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
      timeout: 5000
      database: test_pan_domain" > config/database.yml

run-create-database: &run_create_database
  name: Create Database
  command: |
    cd spec/sample_app
    RAILS_ENV=test bundle exec rake db:create

run-bundle-install: &run_bundle_install
  name: Install Bundle dependencies
  command: bundle install --path vendor/bundle

run-all-tests: &run_all_tests
  name: Run all tests
  command: bundle exec rake spec


version: 2
jobs:
  ruby_2_3_and_postgres_9_5_test:
    <<: *ruby_2_3_and_postgres_9_5_env
    steps:
      - checkout
      - run: apt-get update -y
      - run: apt-get install git -y
      - run: apt-get install gcc -y
      - run: apt-get install make -y
      - run: apt-get install libpq-dev -y
      - run: *run_bundle_install
      - run: *run_all_tests
  
  ruby_2_3_and_postgres_9_5_14_test:
    <<: *ruby_2_3_and_postgres_9_5_14_env
    steps:
      - checkout
      - run: apt-get update -y
      - run: apt-get install git -y
      - run: apt-get install gcc -y
      - run: apt-get install make -y
      - run: apt-get install libpq-dev -y
      - run: *run_bundle_install
      - run: *run_all_tests

  ruby_2_3_and_postgres_9_6_test:
    <<: *ruby_2_3_and_postgres_9_6_env
    steps:
      - restore_cache:
          key: pan_domain-repository-cache-v1-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: gems-cache-v1-{{ checksum "Gemfile.lock" }}
      - checkout
      - run:
          name: Install gem dependencies
          command: |
            apk add --update tzdata
            apk add git build-base postgresql-dev
      - run: *run_database_configuration
      - run: *run_bundle_install
      - run: *run_create_database
      - run: *run_all_tests
      - save_cache:
          key: pan_domain-repository-cache-v1-{{ .Environment.CIRCLE_SHA1 }}
          paths: ~/pan_domain/
      - save_cache:
          key: gems-cache-v1-{{ checksum "Gemfile.lock" }}
          paths: vendor/bundle


workflows:
  version: 2
  ruby-2-3-and-postgres-database-tests:
    jobs:
      # - ruby_2_3_and_postgres_9_5_test
      # - ruby_2_3_and_postgres_9_5_14_test
      - ruby_2_3_and_postgres_9_6_test
